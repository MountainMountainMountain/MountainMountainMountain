<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 네임스페이스에 DAO 풀패키지명을 작성 -->
<mapper namespace="com.mountain.model.dao.CommentDao">

	<select id="selectAll" resultType="CommentResponse">
		SELECT
		    c.serial AS serial,
		    c.title AS title,
		    c.mountain_serial AS mountainSerial,
		    m.name AS mountainName,
		    c.user_serial AS userSerial,
		    u.id AS id,
		    u.name AS name,
		    u.gender AS gender,
		    u.point AS point,
		    c.content AS content,
		    c.reg_date AS regDate,
		    c.update_date AS updateDate,
		    c.calorie AS calorie,
		    c.turnaround AS turnaround,
		    c.view_count AS viewCount
		FROM
		    comment c
		JOIN
		    user u ON c.user_serial = u.serial
		JOIN
		    mountain m ON c.mountain_serial = m.serial
	</select>

	<select id="selectCommentByMountain" parameterType="int"
		resultType="CommentResponse">
		SELECT
		    c.serial AS serial,
		    c.title AS title,
		    c.mountain_serial AS mountainSerial,
		    m.name AS mountainName,
		    c.user_serial AS userSerial,
		    u.id AS id,
		    u.name AS name,
		    u.gender AS gender,
		    u.point AS point,
		    c.content AS content,
		    c.reg_date AS regDate,
		    c.update_date AS updateDate,
		    c.calorie AS calorie,
		    c.turnaround AS turnaround,
		    c.view_count AS viewCount
		FROM
		    comment c
		JOIN
		    user u ON c.user_serial = u.serial
		JOIN
		    mountain m ON c.mountain_serial = m.serial
		WHERE
		    mountain_serial = #{mountainSerial}
	</select>

	<select id="selectOne" parameterType="int"
		resultType="CommentResponse">
		SELECT
		    c.serial AS serial,
		    c.title AS title,
		    c.mountain_serial AS mountainSerial,
		    m.name AS mountainName,
		    c.user_serial AS userSerial,
		    u.id AS id,
		    u.name AS name,
		    u.gender AS gender,
		    u.point AS point,
		    c.content AS content,
		    c.reg_date AS regDate,
		    c.update_date AS updateDate,
		    c.calorie AS calorie,
		    c.turnaround AS turnaround,
		    c.view_count AS viewCount
		FROM
		    comment c
		JOIN
		    user u ON c.user_serial = u.serial
		JOIN
		    mountain m ON c.mountain_serial = m.serial
		WHERE c.serial = #{commentSerial}
	</select>

	<select id="selectCommentByUserSerial" parameterType="int"
		resultType="CommentResponse">
		SELECT
		    c.serial AS serial,
		    c.title AS title,
		    c.mountain_serial AS mountainSerial,
		    m.name AS mountainName,
		    c.user_serial AS userSerial,
		    u.id AS id,
		    u.name AS name,
		    u.gender AS gender,
		    u.point AS point,
		    c.content AS content,
		    c.reg_date AS regDate,
		    c.update_date AS updateDate,
		    c.calorie AS calorie,
		    c.turnaround AS turnaround,
		    c.view_count AS viewCount
		FROM
		    comment c
		JOIN
		    user u ON c.user_serial = u.serial
		JOIN
		    mountain m ON c.mountain_serial = m.serial
		WHERE c.user_serial = #{userSerial};

	</select>

	<insert id="createComment">
		INSERT INTO Comment (title, mountain_serial,
		user_serial, content, calorie, turnaround, star)
		VALUE (#{title},
		#{mountainSerial}, #{userSerial}, #{content}, #{calorie},
		#{turnaround}, #{star})
	</insert>

	<delete id="deleteComment" parameterType="int">
		DELETE FROM Comment
		WHERE serial = #{commentSerial};
	</delete>

	<update id="modifyComment" parameterType="Comment">
		UPDATE Comment SET
		title = #{title}, mountain_serial = #{mountainSerial}, user_serial =
		#{userSerial}, content = #{content}, calorie = #{calorie}, turnaround
		= #{turnaround}
		WHERE serial = #{serial};
	</update>

	<update id="modifyViewCnt" parameterType="int">
		UPDATE Comment
		SET
		view_count = view_count + 1
		WHERE serial = #{commentSerial};
	</update>

	<select id="selectCommentBySearch"
		parameterType="SearchConditionForComment" resultType="CommentResponse">
		SELECT
		    c.serial AS serial,
		    c.title AS title,
		    c.mountain_serial AS mountainSerial,
		    m.name AS mountainName,
		    c.user_serial AS userSerial,
		    u.id AS id,
		    u.name AS name,
		    u.gender AS gender,
		    u.point AS point,
		    c.content AS content,
		    c.reg_date AS regDate,
		    c.update_date AS updateDate,
		    c.calorie AS calorie,
		    c.turnaround AS turnaround,
		    c.view_count AS viewCount
		FROM
		    comment c
		JOIN
		    user u ON c.user_serial = u.serial
		JOIN
		    mountain m ON c.mountain_serial = m.serial
		<where>
			<!-- 동적쿼리(검색 조건) -->
			<if test="key != ''">
				${key} LIKE concat('%', #{word}, '%')
			</if>
			<if test="mountainSerial != null">
				AND mountain_serial = #{mountainSerial}
			</if>
		</where>
		<!-- 동적쿼리(정렬 조건) -->
		<if test="orderBy != ''">
			ORDER BY ${orderBy} ${orderByDir}
		</if>
	</select>


	<select id="selectStar" parameterType="int" resultType="int">
		SELECT
		COUNT(*)
		FROM Comment
		WHERE mountain_serial = #{mountainSerial} AND star
		= #{starNumber};
	</select>

	<select id="turnAroundTime" parameterType="int" resultType="int">
		SELECT COUNT(turnaround)
		FROM Comment
		WHERE mountain_serial =
		#{mountainSerial}
	</select>

	<select id="averageCalorie" parameterType="int" resultType="int">
		SELECT AVG(calorie)
		FROM Comment
		WHERE mountain_serial =
		#{mountainSerial}
	</select>

	<select id="averageTurnAround" parameterType="int"
		resultType="int">
		SELECT AVG(turnaround)
		FROM Comment
		WHERE mountain_serial =
		#{mountainSerial}
	</select>

	<insert id="insertFile">

	</insert>


	<!-- 산 1개에 대한 1~5점이 몇 명인지 세야함 -->
	<!-- 여기에 등반 횟수, 칼로리, 소요시간 추가해야 함 -->

</mapper>